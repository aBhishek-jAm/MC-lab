AREA SORT,CODE,READONLY
ENTRY
MOV R5,#5;
NXTPASS LDR R0,A;
MOV R4,R5;
NXTCOMP LDR R2,[R0];
MOV R1,R2;
ADD R0,#4;
LDR R2,[R0];
CMP R1,R2;
BLS NOEXG;
STR R1,[R0],#-4;
STR R2,[R0],#4;
NOEXG SUBS R4,#1;
BNE NXTCOMP;
SUBS R5,#1;
BNE NXTPASS;
B1 B B1
A DCD 0X40000000
END
 


#include <stdio.h>
 
void bubbleSort(int arr[], int n, int ascending) {
   int i, j, temp;
   for (i = 0; i < n-1; i++) {
       for (j = 0; j < n-i-1; j++) {
           if ((ascending && arr[j] > arr[j+1]) || (!ascending && arr[j] < arr[j+1])) {
               // Swap arr[j] and arr[j+1]
               temp = arr[j];
               arr[j] = arr[j+1];
               arr[j+1] = temp;
           }
       }
   }
}
 
void printArray(int arr[], int n) {
   for (int i = 0; i < n; i++) {
       printf("%d ", arr[i]);
   }
   printf("\n");
}
 
int main() {
   int n, choice;
 
   printf("Enter the number of elements: ");
   scanf("%d", &n);
 
   int arr[n];
   printf("Enter the elements:\n");
   for (int i = 0; i < n; i++) {
       scanf("%d", &arr[i]);
   }
 
   printf("Choose sorting order:\n1. Ascending\n2. Descending\n");
   scanf("%d", &choice);
 
   bubbleSort(arr, n, choice == 1);
 
   if (choice == 1) {
       printf("Array sorted in ascending order:\n");
   } else {
       printf("Array sorted in descending order:\n");
   }
 
   printArray(arr, n);
 
   return 0;
}
